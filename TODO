

We've added TYPE_TAG_FUNCTION, now we need to add methods.
Function/method type syntax:

    (function | method) [NAME]:
        [ret: TYPE]
        args: [NAME([out] TYPE) ...]

...is "self" ("this"?) automatically generated as first argument?..
No, I think let's actually get rid of "staticmethod" and have all methods
be "static" in the sense that they just represent C functions with arbitrary
arguments, *BUT* if we start adding scripting, then we can add a special
operator which attempts to call a method passing its object as first argument.
So for now we don't have to worry about that.




Require type.h for out compiled output, change runtime's type_t to type_info_t,
and move the runtime stuff into runtime.[ch] (instead of writing it out in
compiler_write.c).






Figure out how parsing and writing are going to work.
In particular, how is that going to work with weakrefs?
It would be cool if the fus syntax could do pointers, I guess.


